{"version":3,"sources":["posts.js","getData.js","App.js","reportWebVitals.js","index.js"],"names":["Posts","ticker","this","props","stock","listItems","listOfTickers","find","item","posts","map","d","style","margin","href","url","title","upvotes","historical","created","Component","columns","dataField","text","formatter","cell","row","rowIndex","formatExtraData","alignItems","justifyContent","icon","faRedditSquare","size","align","cursor","headerStyle","column","colIndex","width","sort","verticalAlign","charAt","color","fontWeight","backgroundColor","defaultSorted","order","GetData","componentDidMount","baseURL","process","REACT_APP_BASE_URL","axios","create","get","then","response","setState","stocks","data","res","a","b","shares","slice","state","expandRow","renderer","bootstrap4","keyField","wrapperClasses","pagination","paginationFactory","App","imageSrc","minHeight","opacity","parallaxOffset","background","fontSize","padding","transform","borderRadius","className","position","left","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95c06296.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Posts extends Component {\n  render() {\n\n    let ticker = this.props.stock;\n    let data = this.props.listOfTickers.find(item => { return item.stock === ticker }).posts;\n    let listItems = data.map(d => \n      <li style={{margin: \"0 0 15px 0\"}}>\n        <span>\n          <a href={d.url}>{d.title}</a>\n        </span>\n        <br></br>\n        <span>\n          {d.upvotes} upvotes | Price: ${d.historical} on {d.created}\n        </span>\n      </li>\n    );\n\n    return(\n      <div>\n        <ul>\n          {listItems}\n        </ul>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport axios from 'axios';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Posts from './posts.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRedditSquare } from '@fortawesome/free-brands-svg-icons';\n\nfunction format(cell, row, rowIndex, formatExtraData) {\n  return (\n    <div alignItems= \"center\" justifyContent=\"center\"><FontAwesomeIcon icon={faRedditSquare} size = '2x'/></div>\n  );\n}\n\nconst columns = [{\n  dataField: 'stock',\n  text: '',\n  formatter: format,\n  align: 'center',\n  style: {cursor: 'pointer'},\n  headerStyle: (column, colIndex) => {\n    return { width: '5%' }; \n  }\n}, {\n  dataField: 'stock',\n  text: 'Stock',\n  sort: true,\n  style: {cursor: 'pointer', verticalAlign: 'middle'}\n}, {\n  dataField: 'shares',\n  text: 'Shares',\n  sort: true,\n  style: {cursor: 'pointer', verticalAlign: 'middle'}\n}, {\n  dataField: 'sentiment',\n  text: 'Sentiment',\n  sort: true,\n  style: {cursor: 'pointer', verticalAlign: 'middle'}\n}, {\n  dataField: 'avg_cost',\n  text: 'Average Cost',\n  sort: true,\n  style: {cursor: 'pointer', verticalAlign: 'middle'}\n}, {\n  dataField: 'curr_price',\n  text: 'Current Price',\n  sort: true,\n  style: {cursor: 'pointer', verticalAlign: 'middle'}\n}, {\n  dataField: 'total_return',\n  text: 'Total Return',\n  sort: true,\n  style: (cell, row, rowIndex, colIndex) => {\n    if (cell.charAt(0) === '+') {\n      return {\n        color: '#4CAF50',\n        fontWeight: 'bold',\n        verticalAlign: 'middle'\n      };\n    } else if (cell.charAt(0) === '0') {\n      return {\n        backgroundColor: '#FFFFFF',\n        fontWeight: 'bold',\n        verticalAlign: 'middle'\n      }\n    }\n    return {\n      color: '#EF5350',\n      fontWeight: 'bold',\n      verticalAlign: 'middle'\n    };\n  }\n},];\n\nconst defaultSorted = [{\n  dataField: 'shares',\n  order: 'desc'\n}];\n\nexport default class GetData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stocks: [{\n        \"stock\": \"\",\n        \"shares\": 0,\n        \"sentiment\": 0,\n        \"avg_cost\": \"$0\",\n        \"total_return\": \"0%\",\n        \"curr_price\": \"\",\n        \"posts\": [\n            {\n                \"title\": \"\",\n                \"upvotes\": 0,\n                \"url\": \"\",\n                \"created\": \"\",\n                \"historical\": 0\n            }\n        ]\n    }],\n      width: 400\n    };\n  }\n\n  componentDidMount = () => {\n    const baseURL = process.env.REACT_APP_BASE_URL;\n    const api = axios.create({baseURL});\n    api.get(\"/getPosts\").then(response => {\n      this.setState ({\n        stocks: response.data.res.sort((a,b) => a.shares + b.shares).slice(0,30)\n      });\n    });\n  };\n\n  render() {\n\n    const expandRow = {\n      renderer: row => (\n        <Posts stock={row.stock} listOfTickers={this.state.stocks} />\n      )\n    };\n\n    return (\n      <BootstrapTable\n        bootstrap4\n        keyField=\"stock\"\n        wrapperClasses=\"table-responsive\"\n        pagination={ paginationFactory() }\n        data={ this.state.stocks }\n        columns={ columns }\n        defaultSorted={ defaultSorted }\n        expandRow={ expandRow }\n      />\n    )\n  }\n}","import React, { Component } from 'react';\nimport GetData from './getData';\n// import { Nav, Navbar, NavDropdown, Form, Button, FormControl } from 'react-bootstrap';\nimport LazyHero from 'react-lazy-hero';\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <LazyHero imageSrc=\"https://i.imgur.com/2pIUj46.jpg\" minHeight='30vh' opacity='0' parallaxOffset='100'>\n          <div style={{background: \"#E8E9C9\", fontSize: \"20px\", padding: \"10px\", margin: \"10px\", transform: \"rotate(-6deg)\", borderRadius: \"5px\"}}>\n            <h1 style={{color: \"#3E3E3C\"}}>The r/WallStreetBets Weekly Stock Portfolio</h1>\n            <h4><a href=\"https://github.com/nikashan02/wsbstockportfolio\"><u>github</u></a></h4>\n          </div>\n        </LazyHero>\n        <br></br>\n        <div className=\"App\" style={{width: \"70%\", position: 'absolute', left: '50%', transform: 'translate(-50%, 0%)'}} >\n          <GetData />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}